/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const InfraIndexLazyImport = createFileRoute('/infra/')()
const InfraAdicionarContratoLazyImport = createFileRoute(
  '/infra/adicionar-contrato',
)()

// Create/Update Routes

const InfraIndexLazyRoute = InfraIndexLazyImport.update({
  id: '/infra/',
  path: '/infra/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/infra/index.lazy').then((d) => d.Route))

const InfraAdicionarContratoLazyRoute = InfraAdicionarContratoLazyImport.update(
  {
    id: '/infra/adicionar-contrato',
    path: '/infra/adicionar-contrato',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/infra/adicionar-contrato.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/infra/adicionar-contrato': {
      id: '/infra/adicionar-contrato'
      path: '/infra/adicionar-contrato'
      fullPath: '/infra/adicionar-contrato'
      preLoaderRoute: typeof InfraAdicionarContratoLazyImport
      parentRoute: typeof rootRoute
    }
    '/infra/': {
      id: '/infra/'
      path: '/infra'
      fullPath: '/infra'
      preLoaderRoute: typeof InfraIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/infra/adicionar-contrato': typeof InfraAdicionarContratoLazyRoute
  '/infra': typeof InfraIndexLazyRoute
}

export interface FileRoutesByTo {
  '/infra/adicionar-contrato': typeof InfraAdicionarContratoLazyRoute
  '/infra': typeof InfraIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/infra/adicionar-contrato': typeof InfraAdicionarContratoLazyRoute
  '/infra/': typeof InfraIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/infra/adicionar-contrato' | '/infra'
  fileRoutesByTo: FileRoutesByTo
  to: '/infra/adicionar-contrato' | '/infra'
  id: '__root__' | '/infra/adicionar-contrato' | '/infra/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  InfraAdicionarContratoLazyRoute: typeof InfraAdicionarContratoLazyRoute
  InfraIndexLazyRoute: typeof InfraIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  InfraAdicionarContratoLazyRoute: InfraAdicionarContratoLazyRoute,
  InfraIndexLazyRoute: InfraIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/infra/adicionar-contrato",
        "/infra/"
      ]
    },
    "/infra/adicionar-contrato": {
      "filePath": "infra/adicionar-contrato.lazy.tsx"
    },
    "/infra/": {
      "filePath": "infra/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
